{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","STARTSCALE","DRAWTOOL","MOVETOOL","colors","plotLineLow","x0","y0","x1","y1","drawFunc","dx","dy","yi","D","y","x","plotLineHigh","xi","colorTo32Uint","colorstring","parseInt","substring","colorToString","colornum","toString","padStart","Vector2D","_classCallCheck","_createClass","othervector","number","Map","data","image","dataview","imageview","numchunks","cellsize","canvas","offset","scale","chunkpixels","startpoint","Math","floor","_canvas$getBoundingCl","getBoundingClientRect","width","height","ceil","_setMatrix","_asyncToGenerator","_callee","dimn","start","lines","changeTranscodeTime","map_ver","coords","map_grid","j","coordsobj","_context","fetch","concat","headers","Accept","Content-Type","body","JSON","stringify","arrayBuffer","chunkbuffer","current","Date","now","Uint32Array","ArrayBuffer","byteLength","Uint32data","k","l","bmp_index","color","getDataIndex","finalcolor","a","b","relative_index","_x","_x2","_x3","_x4","_x5","_x6","apply","arguments","currentcell","AppWrapper","_React$Component","props","_this","_possibleConstructorReturn","_getPrototypeOf","tool_mode","debug_mode","show_stats","color_selected","stroke_radius","update","time","tot_time","num_updates","transcode","draw","cursorx","cursory","offsetx","offsety","chunkx","chunky","cxstart","cystart","cxend","cyend","strokecanvas","colorinput","strokecanvasRef","createRef","colorInputRef","changeToolMode","change_to","setState","changeColor","drawStrokeCanvas","isSelected","changeUpdateTime","new_time","changeDrawTime","changeCursorLoc","vector","changeOffsetLoc","changeChunkLoc","_inherits","document","style","overflow","fetchInitialParameters","size","ctx","getContext","clearRect","fillStyle","fillRect","mapver","queryString","window","location","search","urlParams","URLSearchParams","has","get","console","log","filename","x2","y2","response","split","blob","pngblob","url","URL","createObjectURL","link","createElement","href","setAttribute","appendChild","click","parentNode","removeChild","_this2","React","className","MapCanvas","toolmode","Palette","position","right","round","onClick","checked","onChange","defaultValue","e","target","mapDownload","src","alt","ref","border","Component","_React$Component2","_this3","drawLines","lastdraw","tempscale","cellpos","canvasRef","mapoffset","celloffset","cursorcurrent","lmousedown","rmousedown","mousepos","replacecanvas","is_updating","drawcache","_this4","resizeCanvas","addEventListener","setTimeout","updateCanvas","random","moveMap","event","rect","clientX","left","clientY","top","pos","end","transform","setTo","isupdate","_this5","doFill","mapoffset_x","mapoffset_y","imageData","ImageData","Uint8ClampedArray","imageSmoothingEnabled","rctx","putImageData","_canvas$getBoundingCl2","offset_x","offset_y","drawImage","beginPath","lineWidth","moveTo","lineTo","stroke","linearray","line","p1","p2","abs","plotLine","currentpos","_this5$map_grid$getCh","getChunkPosOffset","blockid","_updateCanvas","_callee2","tempupdatescale","_this$map_grid$getVal","linestosend","_this6","_context2","getValues","multipliedby","setMatrix","resetTransform","canvasscale","drawMap","shift","_canvas$getBoundingCl3","_window$devicePixelRa","devicePixelRatio","ratio","scalex","scaley","newcursorcurrent","getCursorPosition","newcurrentcell","getCurrentCell","isEqualTo","drawLine","drawobj","_this7","cursor","getCursor","onContextMenu","preventDefault","onMouseDown","button","_this7$map_grid$getCh","dataindex","onMouseUp","onMouseMove","moveCursor","onMouseLeave","onWheel","newscale","deltaY","oldtempscale","scalenum","_React$Component3","_this8","handleChange","_this9","map","index","backgroundColor","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2defb075.chunk.js","sourcesContent":["import './App.css';\nimport React, { createRef } from 'react';\n\n\nconst UPDATEPERIOD = 1000;\n\nconst CHUNKSIZE = 16;\n\nconst LOWESTSCALE = 3;\n\nconst STARTSCALE = 16;\n\nconst DRAWTOOL = 0;\nconst EYEDROPTOOL = 1;\nconst MOVETOOL = 2;\n\nconst RANDOM_LOCATION_MAX = 1000;\n\nconst PRODUCTION = true;\n\nconst API_HOST = (PRODUCTION) ? \"https://devo.esz.us\" : \"http://localhost:3001\";\n\n\n\n\n\nconst colors = [\n    \"#000000\", // Black\n    \"#FFFFFF\", // White\n    \"#FF0000\", // Red\n    \"#00FF00\", // Green\n    \"#0000FF\", // Blue\n    \"#FFFF00\", // Yellow\n    \"#FF00FF\", // Magenta\n    \"#00FFFF\", // Cyan\n    \"#800000\", // Maroon\n    \"#008000\", // Olive\n    \"#000080\", // Navy\n    \"#808000\", // Olive Drab\n    \"#800080\", // Purple\n    \"#008080\", // Teal\n    \"#808080\", // Gray\n    \"#C0C0C0\", // Silver\n    \"#FFC0CB\", // Pink\n    \"#FFA07A\", // Light Salmon\n    \"#FF7F50\", // Coral\n    \"#FF6347\", // Tomato\n    \"#FF4500\", // Orange Red\n    \"#FF8C00\", // Dark Orange\n    \"#FFD700\", // Gold\n    \"#FFFFE0\", // Light Yellow\n    \"#EEE8AA\", // Pale Goldenrod\n    \"#ADFF2F\", // Green Yellow\n    \"#32CD32\", // Lime Green\n    \"#00FA9A\", // Medium Spring Green\n    \"#00CED1\", // Dark Turquoise\n    \"#6A5ACD\", // Slate Blue\n    \"#7B68EE\", // Medium Slate Blue\n    \"#FF69B4\", // Hot Pink\n    \"#8B4513\" // Saddle Brown\n  ];\n  \n\n\nfunction plotLineLow(x0, y0, x1, y1, drawFunc) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    let yi = 1;\n    if (dy < 0) {\n        yi = -1;\n        dy = -dy;\n    }\n    let D = (2 * dy) - dx;\n    let y = y0;\n\n    for (let x = x0;x<x1+1;x++) {\n        drawFunc(x, y);\n        if (D > 0) {\n            y = y + yi;\n            D = D + (2 * (dy - dx));\n        } else {\n            D = D + 2*dy;\n        }\n    }\n}\nfunction plotLineHigh(x0, y0, x1, y1, drawFunc) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    let xi = 1;\n    if (dx < 0) {\n        xi = -1;\n        dx = -dx;\n    }\n    let D = (2 * dx) - dy;\n    let x = x0;\n\n    for (let y = y0;y<y1+1;y++) {\n        drawFunc(x, y);\n        if (D > 0) {\n            x = x + xi;\n            D = D + (2 * (dx - dy));\n        } else {\n            D = D + 2*dx;\n        }\n    }\n}\n\nfunction plotLine(p1, p2, offset, drawFunc) {\n    \n    let x0 = p1.x+offset.x;\n    let y0 = p1.y+offset.y;\n    \n    let x1 = p2.x+offset.x;\n    let y1 = p2.y+offset.y;\n\n    if (x0===x1 && y0===y1) drawFunc(x0,y0);\n\n\n    if (Math.abs(y1 - y0) < Math.abs(x1 - x0)) {\n        if (x0 > x1) plotLineLow(x1, y1, x0, y0, drawFunc);\n        else plotLineLow(x0, y0, x1, y1, drawFunc);\n    }\n    else {\n        if (y0 > y1) plotLineHigh(x1, y1, x0, y0, drawFunc);\n        else plotLineHigh(x0, y0, x1, y1, drawFunc);\n    }\n}\n\n\nfunction colorTo32Uint(colorstring) {\n    return parseInt(colorstring.substring(1), 16);\n}\nfunction colorToString(colornum) {\n    return \"#\" + (colornum & 0x00FFFFFF).toString(16).padStart(6, '0');\n}\n\nclass Vector2D {\n    constructor(x,y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    transform(x,y) {\n        this.x += x;\n        this.y += y;\n    }\n\n    setTo(x,y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isEqualTo(othervector) {\n        return (this.x===othervector.x && this.y===othervector.y);\n    }\n    notEqualTo(othervector) {\n        return (this.x!==othervector.x || this.y!==othervector.y);\n    }\n\n    positive() {\n        return (this.x >= 0 && this.y >=0);\n    }\n\n    multipliedby(number) {\n        return new Vector2D(this.x*number,this.y*number);\n    }\n    transformedby(x,y) {\n        return new Vector2D(this.x+x,this.y+y);\n    }\n}\n\n\nclass Map {\n    constructor() {\n        //the data returned by the server\n        this.data = null;\n        //the data formatted as an image bitmap\n        this.image = null;\n\n        this.dataview = null;\n        this.imageview = null;\n\n        this.numchunks = null;\n        this.cellsize = null;\n    }\n\n    getValues(canvas, offset, scale) {\n        let chunkpixels = CHUNKSIZE*scale;\n\n        let numchunks = new Vector2D(0,0);\n        let startpoint = new Vector2D(0,0);\n\n        startpoint.x = (offset.x === 0) ? 0 : Math.floor((-1*offset.x)/chunkpixels);\n        startpoint.y = (offset.y === 0) ? 0 : Math.floor((-1*offset.y)/chunkpixels);\n\n        const { width, height } = canvas.getBoundingClientRect();\n\n        numchunks.x = Math.ceil(width/chunkpixels)+1; // bit cheaty - should probs optimise\n        numchunks.y = Math.ceil(height/chunkpixels)+1;\n\n        return {startpoint, numchunks};\n    }\n\n    async setMatrix(dimn, start, lines, cellsize, changeTranscodeTime, map_ver) {\n\n        let coords = [];\n        let map_grid = this;\n\n        for (let i=0;i<dimn.x;i++) {\n            for (let j=0;j<dimn.y;j++) {\n                let coordsobj = { x: start.x+i, y: start.y+j };\n                coords.push(coordsobj);    \n            }\n        }\n        return new Promise(function(resolve, reject) {\n            fetch(`${API_HOST}/getchunks`,{\n                method: 'POST',\n                headers: {'Accept': 'application/octet-stream', 'Content-Type': 'application/json'},\n                body: JSON.stringify({coords:coords, lines:lines, map_ver:map_ver})\n            }).then((data)=>{\n                return data.arrayBuffer();\n            }).then((chunkbuffer) => {\n                \n                map_grid.numchunks = dimn;\n                let current = Date.now();\n\n                // const cellsize = 10;\n                map_grid.data = chunkbuffer;\n                map_grid.dataview = new Uint32Array(map_grid.data);\n\n                map_grid.image = new ArrayBuffer(chunkbuffer.byteLength*cellsize*cellsize);\n                map_grid.imageview = new Uint32Array(map_grid.image);\n\n                let Uint32data = new Uint32Array(chunkbuffer);\n                \n                for (let i=0;i<map_grid.numchunks.x;i++) {\n                    for (let j=0;j<map_grid.numchunks.y;j++) {\n                        for (let k=0;k<CHUNKSIZE;k++) {\n                            for (let l=0;l<CHUNKSIZE;l++) {\n                                let bmp_index = i*CHUNKSIZE*cellsize + j*map_grid.numchunks.x*(CHUNKSIZE*CHUNKSIZE)*cellsize*cellsize + k*cellsize + l*map_grid.numchunks.x*CHUNKSIZE*cellsize*cellsize;\n                                let alex_index = map_grid.getDataIndex(i,j,k,l);\n                                let color = Uint32data[alex_index];\n                                let finalcolor = ((color << 16)&0x00FF0000) | ((color)&0xFF00FF00) | ((color>>16)&0x000000FF);\n\n                                for (let a=0;a<cellsize;a++) {\n                                    for (let b=0;b<cellsize;b++) {\n                                        let relative_index = bmp_index + a + b*map_grid.numchunks.x*CHUNKSIZE*cellsize;\n                                        map_grid.imageview[relative_index] = finalcolor;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                map_grid.cellsize = cellsize;\n                changeTranscodeTime(Date.now()-current);\n                resolve();\n            });\n        });\n    }\n\n    getChunkPosOffset(currentcell, startpoint) {\n        const i = Math.floor((currentcell.x/CHUNKSIZE))-startpoint.x;\n        const k = currentcell.x - (i+startpoint.x)*CHUNKSIZE;\n\n        const j = Math.floor((currentcell.y/CHUNKSIZE))-startpoint.y;\n        const l = currentcell.y - (j+startpoint.y)*CHUNKSIZE;\n\n\n        return {i, j, k, l};\n    }\n    getDataIndex(i,j,k,l) {\n        return i*(this.numchunks.y)*(CHUNKSIZE*CHUNKSIZE)+j*(CHUNKSIZE*CHUNKSIZE)+k*CHUNKSIZE+l;\n    }\n}\n\n\nclass AppWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            map_ver: null,\n            tool_mode: MOVETOOL,\n            debug_mode: false,\n            show_stats: true,\n            color_selected: 1672153, \n            stroke_radius:1,\n            update: {\n                time: 0,\n                tot_time: 0,\n                num_updates: 1\n            },\n            transcode: {\n                time: 0,\n                tot_time: 0,\n                num_updates: 1\n            },\n            draw: {\n                time: 0,\n                tot_time: 0,\n                num_updates: 1\n            },\n            cursorx: 0,\n            cursory: 0,\n            offsetx: 0,\n            offsety: 0,\n            chunkx: 0,\n            chunky: 0,\n\n            cxstart:0,\n            cystart:0,\n            cxend:0,\n            cyend:0\n        };\n\n        this.strokecanvas = null;\n        this.colorinput = null;\n\n        this.strokecanvasRef = createRef();\n        this.colorInputRef = createRef();\n\n        this.changeToolMode = (change_to) => {\n            this.setState({tool_mode: change_to});\n        }\n\n        this.changeColor = (color) => {\n            this.setState({color_selected: color});\n            this.changeToolMode(DRAWTOOL);\n            this.colorinput.value = colorToString(color);\n            this.drawStrokeCanvas(color);\n        };\n        this.isSelected = (color) => {\n            if (typeof color === 'string') {\n                let out_num = colorTo32Uint(color);\n                return (out_num===this.state.color_selected);\n            }\n            else if (typeof color === 'number') {\n                return (color===this.state.color_selected);\n            }\n        };\n\n        this.changeUpdateTime = (new_time) => {\n            this.setState({update:{\n                time: new_time, \n                tot_time: this.state.update.tot_time+new_time, \n                num_updates: this.state.update.num_updates+1\n            }});\n        }\n        this.changeTranscodeTime = (new_time) => {\n            this.setState({transcode:{\n                time: new_time, \n                tot_time: this.state.transcode.tot_time+new_time, \n                num_updates: this.state.transcode.num_updates+1\n            }});\n        }\n        this.changeDrawTime = (new_time) => {\n            this.setState({draw:{\n                time: new_time, \n                tot_time: this.state.draw.tot_time+new_time, \n                num_updates: this.state.draw.num_updates+1\n            }});\n        }\n        this.changeCursorLoc = (vector) => {\n            this.setState({cursorx: vector.x,cursory: vector.y});\n        }\n        this.changeOffsetLoc = (vector) => {\n            this.setState({offsetx: vector.x,offsety: vector.y});\n        }\n        this.changeChunkLoc = (x,y) => {\n            this.setState({chunkx: x,chunky: y});\n        }\n    }\n\n    componentDidMount() {\n        document.body.style.overflow = \"hidden\"; // stops user from scrolling the page\n        this.fetchInitialParameters();\n        this.strokecanvas = this.strokecanvasRef.current;\n        this.colorinput = this.colorInputRef.current;\n        this.drawStrokeCanvas(this.state.color_selected);\n    }\n\n    drawStrokeCanvas(color) {\n        const cellsize = 50;\n        const size = (this.state.stroke_radius+2)*cellsize;\n        this.strokecanvas.width = size;\n        this.strokecanvas.height = size;\n\n        const ctx = this.strokecanvas.getContext('2d');\n        ctx.clearRect(0,0,this.strokecanvas.width,this.strokecanvas.height);\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fillRect(0,0,this.strokecanvas.width,this.strokecanvas.height);\n\n        ctx.fillStyle = colorToString(color);\n        ctx.fillRect(cellsize, cellsize, cellsize,cellsize);\n    }\n\n    fetchInitialParameters() {\n\n        // mapver: 0 (default), a (mine)\n\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        let mapver;\n        if (urlParams.has('map')) mapver = urlParams.get('map');\n        else mapver = \"default\";\n\n        console.log(urlParams.has('map'), urlParams.get('map'));\n\n        this.setState({map_ver: mapver});\n\n    }\n\n    mapDownload() {\n        let filename;\n        let coordsobj = {x1:this.state.cxstart,y1:this.state.cystart,x2:this.state.cxend,y2:this.state.cyend, map_ver:this.state.map_ver};\n        if (coordsobj.x1===coordsobj.x2 || coordsobj.y1===coordsobj.y2 || coordsobj.x1>coordsobj.x2 || coordsobj.y1>coordsobj.y2) return;\n\n        fetch(`${API_HOST}/getimage`,{\n            method: 'POST',\n            headers: {'Accept': 'application/octet-stream', 'Content-Type': 'application/json'},\n            body: JSON.stringify(coordsobj)\n        }).then((response) => {\n            filename = response.headers.get('Content-Disposition').split('\"')[1];\n            return response.blob()\n        })\n        .then((pngblob) => {\n            const url = window.URL.createObjectURL(pngblob);\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download',filename);\n            document.body.appendChild(link);\n            link.click();\n            link.parentNode.removeChild(link);\n        });\n    }\n\n    render() {\n        return (\n            <div className='App-wrapper'>\n                <MapCanvas \n                    toolmode={this.state.tool_mode}\n                    color_selected={this.state.color_selected}\n                    debug_mode={this.state.debug_mode}\n                    map_ver={this.state.map_ver}\n                    changeToolMode={this.changeToolMode}\n                    changeUpdateTime={this.changeUpdateTime}\n                    changeTranscodeTime={this.changeTranscodeTime}\n                    changeDrawTime={this.changeDrawTime}\n                    changeCursorLoc={this.changeCursorLoc}\n                    changeOffsetLoc={this.changeOffsetLoc}\n                    changeChunkLoc={this.changeChunkLoc}\n                    changeColor={this.changeColor}\n                />\n                <Palette isSelected={this.isSelected} changeColor={this.changeColor} color={this.state.color_selected}/>\n                <div className='drawer primary'>\n                    {(this.state.show_stats)?(<div style={{position: `absolute`,right:`0.8vw`}}>\n                        ({this.state.update.time}ms, avg: {Math.round(this.state.update.tot_time/this.state.update.num_updates)}ms, {this.state.update.num_updates} updates)\n                        <br/>({this.state.transcode.time}ms, avg: {Math.round(this.state.transcode.tot_time/this.state.transcode.num_updates)}ms, {this.state.transcode.num_updates} transcodes);\n                        <br/>({this.state.draw.time}ms, avg: {Math.round(this.state.draw.tot_time/this.state.draw.num_updates)}ms, {this.state.draw.num_updates} draws)\n                        <br/>Cursor: ({this.state.cursorx},{this.state.cursory})\n                        <br/>Offset: ({this.state.offsetx},{this.state.offsety})\n                        <br/>Chunk: ({this.state.chunkx},{this.state.chunky})\n                    </div>):null}\n\n                    <div\n                        className={`toolbutton` + (this.state.tool_mode===DRAWTOOL ? \"selected\" : \"\")+ ` blockbutton` + (this.state.tool_mode===DRAWTOOL ? \"selected\" : \"\")}\n                        onClick={() => {this.changeToolMode(DRAWTOOL)}}\n                    >draw</div>\n                    <div\n                        className={`toolbutton` + (this.state.tool_mode===EYEDROPTOOL ? \"selected\" : \"\")+ ` blockbutton` + (this.state.tool_mode===EYEDROPTOOL ? \"selected\" : \"\")}\n                        onClick={() => {this.changeToolMode(EYEDROPTOOL)}}\n                    >eyedrop</div>\n                    <div\n                        className={`toolbutton` + (this.state.tool_mode===MOVETOOL ? \"selected\" : \"\")+ ` blockbutton` + (this.state.tool_mode===MOVETOOL ? \"selected\" : \"\")}\n                        onClick={() => {this.changeToolMode(MOVETOOL)}}\n                    >move</div>\n                    \n\n                    <input checked={this.state.debug_mode} type={\"checkbox\"} onChange={()=>{this.setState({debug_mode:!this.state.debug_mode})}}></input> Debug Mode&ensp;\n                    <input checked={this.state.show_stats} type={\"checkbox\"} onChange={()=>{this.setState({show_stats:!this.state.show_stats})}}></input> Stats\n                    <table\n                        className={`download-wrapper`}\n                        // onClick={() => this.fileDownload()}\n                    ><tbody>\n                        <tr>\n                            <td>\n                                <p>from:&nbsp;</p><input defaultValue={\"0\"} type={\"number\"} style={{width:\"35px\"}} onChange={(e)=>this.setState({cxstart:parseInt(e.target.value)})}></input>\n                                <input defaultValue={\"0\"} type={\"number\"} style={{width:\"35px\"}} onChange={(e)=>this.setState({cystart:parseInt(e.target.value)})}></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <p>to:&nbsp;</p><input defaultValue={\"0\"} type={\"number\"} style={{width:\"35px\"}} onChange={(e)=>this.setState({cxend:parseInt(e.target.value)})}></input>\n                                <input defaultValue={\"0\"} type={\"number\"} style={{width:\"35px\"}} onChange={(e)=>this.setState({cyend:parseInt(e.target.value)})}></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <p >Save PNG:</p>\n                                <div className={`download-button`} onClick={() => this.mapDownload()}><img src='save.png' alt='save'/></div>\n                            </td>\n                        </tr>\n                    </tbody></table>\n                    <canvas ref={this.strokecanvasRef} style={{width:\"10vmin\",height:\"10vmin\"}}></canvas>\n                    <input ref={this.colorInputRef} style={{height:\"40px\", width:\"40px\", border:\"none\"}} defaultValue={colorToString(this.state.color_selected)} type={\"color\"} onChange={(e)=>{this.changeColor(colorTo32Uint(e.target.value))}}></input>\n                    {/* <div style={{width:\"100px\", height:\"100px\", backgroundColor:colorToString(this.state.color_selected)}}></div> */}\n                </div>\n            </div>\n        )\n    }\n}\n\nclass MapCanvas extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.drawLines = [];\n\n        this.lastdraw = 0;\n\n        this.scale = STARTSCALE;\n        this.tempscale = this.scale;\n\n        this.cellpos = {i:0,j:0,k:0,l:0};\n\n        this.map_grid = null;\n        this.canvasRef = createRef();\n    \n        this.mapoffset = new Vector2D(0,0);\n        this.celloffset = new Vector2D(0,0);\n        this.currentcell = new Vector2D(0,0);\n        this.startpoint = new Vector2D(0,0);\n\n        this.cursorcurrent = new Vector2D(0,0);\n        this.lmousedown = false;\n        this.rmousedown = false;\n        this.mousepos = new Vector2D(0,0);\n\n        this.canvas = null;\n        this.replacecanvas = null;\n\n        this.is_updating = false;\n        this.drawcache = [];\n    }\n\n\n    //Called after element's initialisation\n    componentDidMount() {\n        this.canvas = this.canvasRef.current;\n        this.replacecanvas = document.createElement('canvas');\n        this.map_grid = new Map();\n        this.resizeCanvas(this.canvas);\n        window.addEventListener('resize', ()=>this.resizeCanvas(this.canvas));\n        setTimeout(this.updateCanvas(), UPDATEPERIOD);\n\n        let x = (Math.floor(Math.random() * RANDOM_LOCATION_MAX*2 - RANDOM_LOCATION_MAX))*this.scale;\n        let y = (Math.floor(Math.random() * RANDOM_LOCATION_MAX*2 - RANDOM_LOCATION_MAX))*this.scale;\n        this.moveMap(this.mapoffset, new Vector2D(x,y));\n    }\n\n    getCursorPosition(event, canvas) {\n        const rect = canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        const pos = new Vector2D(x/(this.tempscale/this.scale),y/(this.tempscale/this.scale));\n        this.mousepos = pos;\n        return pos;\n    }\n\n    getCurrentCell() {\n        let x = Math.floor((this.cursorcurrent.x-this.mapoffset.x*this.scale)/(this.scale));\n        let y = Math.floor((this.cursorcurrent.y-this.mapoffset.y*this.scale)/(this.scale));\n        const pos = new Vector2D(x,y);\n        return pos;\n    }\n\n    moveMap(start, end) {\n        let x = (end.x-start.x)/this.scale;\n        let y = (end.y-start.y)/this.scale;\n        // console.log(x,y);\n        this.mapoffset.transform(x,y);\n        this.celloffset.setTo(Math.floor(this.mapoffset.x),Math.floor(this.mapoffset.y));\n        this.props.changeOffsetLoc(this.celloffset);\n    }\n\n    drawMap (canvas, startpoint, isupdate) {\n        let start =  Date.now();\n        if (this.map_grid.image===null || this.map_grid.numchunks===null) return;\n        const cellsize = this.map_grid.cellsize;\n\n        let x,y;\n        let doFill = (i,j,k,l) => {\n\n            x = (((i+startpoint.x)*CHUNKSIZE+k))*(cellsize)+mapoffset_x;\n            y = (((j+startpoint.y)*CHUNKSIZE+l))*(cellsize)+mapoffset_y;\n            ctx.fillRect(x, y, cellsize, cellsize);\n            // console.log(x,y,cellapparentsize);\n        }\n\n        let length = this.map_grid.numchunks.x*CHUNKSIZE*cellsize;\n        if ((this.map_grid.image.byteLength*4)%length!==0) return;\n        let imageData = new ImageData(new Uint8ClampedArray(this.map_grid.image), length);\n\n        const ctx = canvas.getContext(\"2d\");\n        ctx.imageSmoothingEnabled = false;\n\n        const rctx = this.replacecanvas.getContext(\"2d\");\n        rctx.clearRect(0,0,this.replacecanvas.width, this.replacecanvas.height);\n        rctx.putImageData(imageData, 0, 0);\n\n        const { width, height } = canvas.getBoundingClientRect();\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        let mapoffset_x = Math.floor(this.mapoffset.x*cellsize);\n        let mapoffset_y = Math.floor(this.mapoffset.y*cellsize);\n        let offset_x = startpoint.x*CHUNKSIZE*cellsize+mapoffset_x;\n        let offset_y = startpoint.y*CHUNKSIZE*cellsize+mapoffset_y;\n\n        {\n            ctx.drawImage(this.replacecanvas, offset_x, offset_y);\n            \n            if (this.props.debug_mode) {\n                ctx.beginPath();\n                for (let i=0;i<this.map_grid.numchunks.x;i++) {\n                    for (let j=0;j<this.map_grid.numchunks.y;j++) {\n                        x = (((i+startpoint.x)*CHUNKSIZE))*cellsize+mapoffset_x;\n                        y = (((j+startpoint.y)*CHUNKSIZE))*cellsize+mapoffset_y;\n    \n                        ctx.fillStyle = \"#000000\";\n                        ctx.lineWidth = 0.01*Math.floor(this.scale);\n                        ctx.moveTo(x, 0);\n                        ctx.lineTo(x, height);\n                        // ctx.stroke();\n                        ctx.moveTo(0, y);\n                        ctx.lineTo(width, y);\n                    }\n                }\n                ctx.stroke();\n            }\n\n            this.drawcache.forEach((linearray)=>{\n                linearray.forEach((line)=>{\n                    plotLine(line.p1, line.p2, line.offset, (x,y)=>{\n                        const currentpos = new Vector2D(x-line.offset.x,y-line.offset.y);\n                        const {i, j, k, l} = this.map_grid.getChunkPosOffset(currentpos, this.startpoint);\n                        ctx.fillStyle = colorToString(line.blockid);\n                        doFill(i, j, k, l);\n                    });\n                })\n            });\n\n            if (this.props.toolmode===DRAWTOOL) {\n                // doFill(this.cellpos);\n                ctx.fillStyle = colorToString(this.props.color_selected)+\"ff\";\n                doFill(this.cellpos.i, this.cellpos.j, this.cellpos.k, this.cellpos.l);\n            }\n        };\n\n        this.props.changeDrawTime(Date.now()-start);\n    }\n\n    async updateCanvas() {\n        let start = Date.now(); // time testing\n\n        let tempupdatescale = Math.floor(this.tempscale);\n\n        let {startpoint, numchunks} = this.map_grid.getValues(this.canvas, this.mapoffset.multipliedby(tempupdatescale), tempupdatescale);\n        let linestosend = this.drawLines;\n        this.drawLines = [];\n        console.log(this.props.map_ver);\n        if (this.props.map_ver!==null) {\n            this.map_grid.setMatrix(numchunks, startpoint, linestosend, tempupdatescale, this.props.changeTranscodeTime, this.props.map_ver)\n            .then(()=>{\n                this.replacecanvas.width = tempupdatescale*numchunks.x*CHUNKSIZE;\n                this.replacecanvas.height = tempupdatescale*numchunks.y*CHUNKSIZE;    \n\n                this.canvas.getContext('2d').resetTransform();\n                this.resizeCanvas(this.canvas);\n                this.canvasscale(this.canvas, this.tempscale/tempupdatescale, this.tempscale/tempupdatescale)\n                this.scale = Math.floor(this.tempscale)\n                this.startpoint = startpoint;\n                this.drawMap(this.canvas, startpoint, true);\n\n                this.props.changeUpdateTime(Date.now()-start);\n            }).then(()=>{\n                // this.drawcache.forEach((draw) => {draw()});\n                this.drawcache.push([]);\n                if (this.drawcache.length>4) {\n                    this.drawcache.shift();\n                }\n                \n            });\n        }\n\n        setTimeout(()=>{this.updateCanvas()}, UPDATEPERIOD);\n    }\n\n    // stolen code lmao\n    resizeCanvas(canvas) {\n        const { width, height } = canvas.getBoundingClientRect();\n        \n        if (canvas.width !== width || canvas.height !== height) {\n          const { devicePixelRatio:ratio=1 } = window;\n          const context = canvas.getContext('2d');\n          canvas.width = (1*width*ratio);\n          canvas.height = (1*height*ratio);\n          context.scale(ratio, ratio);\n        //   console.log(ratio);\n        //   canvas.style.width = `${width}px`;\n        //   canvas.style.height = `${height}px`;\n          return true;\n        }\n    \n        return false\n    }\n\n    canvasscale(canvas, scalex, scaley) {\n        // let mousepos = this.mousepos;\n        const ctx = canvas.getContext('2d');\n        // const transx = mousepos.x;\n        // const transy = mousepos.y;\n        // ctx.translate(transx, transy);\n        ctx.scale(scalex, scaley);\n        // ctx.translate(-transx, -transy);\n    }\n\n    moveCursor(event) {\n        let update = false;\n        let newcursorcurrent = this.getCursorPosition(event, this.canvas);\n        if (this.rmousedown) {\n            this.moveMap(this.cursorcurrent, newcursorcurrent);\n            update = true;\n        }\n        this.cursorcurrent = newcursorcurrent;\n        let newcurrentcell = this.getCurrentCell();\n        // Drawing line and updating stats\n        if (!this.currentcell.isEqualTo(newcurrentcell)) {\n            if (this.lmousedown) this.drawLine(this.currentcell,newcurrentcell);\n            this.currentcell = newcurrentcell;\n            this.cellpos = this.map_grid.getChunkPosOffset(this.currentcell, this.startpoint);\n            this.props.changeCursorLoc(this.currentcell);\n            this.props.changeChunkLoc(this.cellpos.i+this.startpoint.x,this.cellpos.j+this.startpoint.y);\n            update = true;\n        }\n        return update;\n    }\n\n    drawLine(p1,p2) {\n        \n        let drawobj = {p1:p1,p2:p2,offset:this.celloffset,blockid:this.props.color_selected};\n        this.drawcache[this.drawcache.length-1].push(drawobj);\n        this.drawLines.push(drawobj);\n    }\n\n    render() {\n        let getCursor = ()=>{\n            switch (this.props.toolmode) {\n                case EYEDROPTOOL:\n                    return \"crosshair\";\n                case MOVETOOL:\n                    return \"move\";\n                default:\n                    return \"default\";\n            }\n        }\n        return (<div>\n            {/* <canvas ref={this.canvasRef2} style={{visibility:\"hidden\"}}></canvas> */}\n            <canvas \n                ref={this.canvasRef}\n                className='map-canvas primary'\n                style={{cursor:getCursor()}}\n                onContextMenu={(e) => {\n                    e.preventDefault();\n                }}\n                onMouseDown={(e) => {\n                    e.preventDefault();\n                    if (e.button === 0) {\n                        switch (this.props.toolmode) {\n                            case EYEDROPTOOL:\n                                console.log(\"eyedroptool used\");\n                                let {i,j,k,l} = this.map_grid.getChunkPosOffset(this.currentcell, this.startpoint);\n                                let dataindex = this.map_grid.getDataIndex(i,j,k,l);\n                                this.props.changeColor(this.map_grid.dataview[dataindex]);\n                                // this.props.changeToolMode(DRAWTOOL);\n                                break;\n                            case MOVETOOL:\n                                this.rmousedown=true;\n                                break;\n                            default:\n                                this.lmousedown=true;\n                                this.drawLine(this.currentcell,this.currentcell);\n                                this.drawMap(this.canvas, this.startpoint);\n                                break;\n                        }\n                    }\n                    else if (e.button === 2) {\n                        this.rmousedown=true;\n                    }\n                }}\n                onMouseUp={(e) => {\n                    this.lmousedown=false;\n                    this.rmousedown=false;\n                    this.drawMap(this.canvas, this.startpoint);\n                }}\n                onMouseMove={(e) => {\n                    if (this.moveCursor(e)) this.drawMap(this.canvas, this.startpoint);\n                }}\n                onMouseLeave={(e) => {\n                    this.moveCursor(e);\n                    this.lmousedown=false;\n                    this.rmousedown=false;\n                    this.drawMap(this.canvas, this.startpoint);\n                }}\n                onWheel={(e) => {\n                    let newscale = this.tempscale - Math.floor(e.deltaY)/100;\n                    // console.log(this.scale, this.tempscale);\n                    let oldtempscale = this.tempscale;\n                    if (newscale>LOWESTSCALE) this.tempscale = newscale;\n                    else this.tempscale = LOWESTSCALE;\n                    // console.log(this.tempscale);\n                    const scalenum = this.tempscale/oldtempscale;\n                    this.canvasscale(this.canvas, scalenum, scalenum);\n                    // this.scale = Math.floor(this.tempscale);\n                    \n                    this.drawMap(this.canvas, this.startpoint);\n                }}\n            ></canvas></div>\n        )\n    }\n}\n\n// needs to be fixed up - maybe add useEffect()\nclass Palette extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = (e) => {\n            this.props.changeColor(e.target.value);\n        }\n    }\n\n    render() {\n        return (\n            <div className='palette primary'>\n                {\n                    colors.map((color,index) => (\n                        <div \n                            key={index} \n                            style={{backgroundColor: `${color}`}} \n                            className={`blockbutton` + (this.props.isSelected(color) ? \"selected\" : \"\")}\n                            onClick={() => {this.props.changeColor(colorTo32Uint(color))}}\n                            //onClick={() => {console.log(button.blockid)}}\n                            ></div>\n                    ))\n                }\n        </div>\n        )\n    }\n\n}\n\n\n\n\nfunction App() {\n  return (\n    <AppWrapper/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}